<div id="editor_header">
  <%= @asset.file_file_name %>
  <div id="help">
    <div id="help_window_toggler" class="editor_icon"></div>
      <div id="help_window">
      <p>Hotkeys</p><br>
        Ctrl-F / Cmd-F - Start searching<br>
        Ctrl-G / Cmd-G - Find next     <br>
        Shift-Ctrl-G / Shift-Cmd-G - Find previous  <br>
        Shift-Ctrl-F / Cmd-Option-F - Replace        <br>
        Shift-Ctrl-R / Shift-Cmd-Option-F - Replace all   <br>
    </div>
  </div>
  <div id="settings">
    <div id="settings_window_toggler" class="editor_icon"></div>
    <div id="settings_window">
      Select a theme:
      <select onchange="selectTheme()" id="select_theme">
        <option value="default">default</option>
        <option value="ambiance">ambiance</option>
        <option value="blackboard">blackboard</option>
        <option value="cobalt">cobalt</option>
        <option value="eclipse">eclipse</option>
        <option value="elegant">elegant</option>
        <option value="erlang-dark">erlang-dark</option>
        <option value="lesser-dark">lesser-dark</option>
        <option value="monokai">monokai</option>
        <option value="neat">neat</option>
        <option value="night">night</option>
        <option value="rubyblue">rubyblue</option>
        <option value="twilight">twilight</option>
        <option value="vibrant-ink">vibrant-ink</option>
        <option value="xq-dark">xq-dark</option>
      </select><br>
      <input type="checkbox" id="ln" onchange="toggleLN(this)"> Line numbers<br>
      Font size: <br>
      Line Count: <br>
    </div>
  </div>
</div>
<%= form_for([:admin, @store, @asset]) do |f| %>
  <%= f.text_area :file_content, :value => @lines, :class => "editor_content", :id => @asset_type %>
  <div id="editor_footer">
    <%= f.submit "Save & close", :class => "float_r" -%>
    <div class="button grey float_r" id="editor_quick_save" onclick="quick_save('<%= @store.id %>', '<%= @asset.id %>')">Quick save</div>
    <div id="message" class="float_r"></div>
    <a href="javascript:autoFormat()" class="button grey" style="margin-left: 33%;">Autoformat</a>
    <%= link_to "Cancel", admin_store_asset_path(@store, @asset), :class => "button grey float_l", :id => "editor_cancel" %>
  </div>
<% end %>

<script>
  var editor = CodeMirror.fromTextArea(document.getElementById("<%= @asset_type %>"), {
    lineNumbers: true,
    lineWrapping: true,// ?
    mode: "<%= @asset_type %>",
    tabSize: 4,
    indentUnit: 4,    // ?
    indentWithTabs: true, // ?
    onCursorActivity: function() {
      editor.setLineClass(hlLine, null, null);
      hlLine = editor.setLineClass(editor.getCursor().line, null, "activeLine");
      editor.matchHighlight("CodeMirror-matchhighlight");
    },
    extraKeys: {
      "F11": function(cm) {
        setFullScreen(cm, !isFullScreen(cm));
      },
      "Esc": function(cm) {
        if (isFullScreen(cm)) setFullScreen(cm, false);
      },
      "Ctrl-Space": "autocomplete"
    }
  });

  CodeMirror.commands.autocomplete = function(cm) {
    CodeMirror.simpleHint(cm, CodeMirror.javascriptHint);
  };

  var hlLine = editor.setLineClass(0, "activeLine");

  if("<%= @theme %>" != "default"){
    j("#select_theme option[value='default']").removeAttr("selected");
    j("#select_theme option[value='<%= @theme %>']").attr("selected", "selected");
  }
  editor.setOption("theme", "<%= @theme %>");
  var input = document.getElementById("select_theme");
  function selectTheme() {
    var theme = input.options[input.selectedIndex].innerHTML;
    editor.setOption("theme", theme);
    j.get("/change_editor_theme/" + theme);
  }

  if("<%= @ln %>" == "false"){
    editor.setOption("lineNumbers", false);
  }
  function toggleLN(target){
    editor.setOption("lineNumbers", target.checked);
    j.get("/change_ln/" + target.checked);
  }

  function autoFormat() {
    var lineCount = parseInt(j(".CodeMirror-gutter-text pre:last").html());
    editor.autoFormatRange({ch:0, line:0}, {ch:0, line:lineCount});
  }

  function isFullScreen(cm) {
    return /\bCodeMirror-fullscreen\b/.test(cm.getWrapperElement().className);
  }
  function winHeight() {
    return window.innerHeight || (document.documentElement || document.body).clientHeight;
  }
  function setFullScreen(cm, full) {
    var wrap = cm.getWrapperElement(), scroll = cm.getScrollerElement();
    if (full) {
      wrap.className += " CodeMirror-fullscreen";
      scroll.style.height = winHeight() + "px";
      document.documentElement.style.overflow = "hidden";
    } else {
      wrap.className = wrap.className.replace(" CodeMirror-fullscreen", "");
      scroll.style.height = "";
      document.documentElement.style.overflow = "";
    }
    cm.refresh();
  }
  CodeMirror.connect(window, "resize", function() {
    var showing = document.body.getElementsByClassName("CodeMirror-fullscreen")[0];
    if (!showing) return;
    showing.CodeMirror.getScrollerElement().style.height = winHeight() + "px";
  });
</script>

<style>
  .CodeMirror {background: #f8f8f8;}
  .activeLine {background: rgba(95, 95, 95, 0.14) !important;}
  .CodeMirror-fullscreen {
    display: block;
    position: absolute;
    top: 0; left: 0;
    width: 100%;
    z-index: 9999;
  }
  .CodeMirror-completions {
    position: absolute;
    z-index: 10;
    overflow: hidden;
    -webkit-box-shadow: 2px 3px 5px rgba(0,0,0,.2);
    -moz-box-shadow: 2px 3px 5px rgba(0,0,0,.2);
    box-shadow: 2px 3px 5px rgba(0,0,0,.2);
  }
  .CodeMirror-completions select {
    background: #fafafa;
    outline: none;
    border: none;
    padding: 0;
    margin: 0;
    font-family: monospace;
  }
  span.CodeMirror-matchhighlight { background: rgba(225, 240, 215, 0.83)}
  .CodeMirror-focused span.CodeMirror-matchhighlight { background: #b8d5b0; !important }

  .CodeMirror-dialog {
    position: relative;
  }

  .CodeMirror-dialog > div {
    position: absolute;
    top: 0; left: 0; right: 0;
    background: white;
    border-bottom: 1px solid #eee;
    z-index: 15;
    padding: .1em .8em;
    overflow: hidden;
    color: #333;
  }

  .CodeMirror-dialog input {
    border: none;
    outline: none;
    background: transparent;
    width: 20em;
    color: inherit;
    font-family: monospace;
  }

  .CodeMirror-dialog button {
    font-size: 70%;
  }
</style>